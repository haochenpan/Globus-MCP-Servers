name: Deploy MCP Servers to AWS Lightsail

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - server_name: diaspora  # diaspora_server.py
            service: science-mcps-diaspora
            container_path: mcps/diaspora/Dockerfile
            port: 8000
          # - server_name: compute  # compute_server.py
          #   service: science-mcps-compute
          #   container_path: mcps/globus/Dockerfile
          #   port: 8000
          # - server_name: transfer  # transfer_server.py
          #   service: science-mcps-transfer
          #   container_path: mcps/globus/Dockerfile
          #   port: 8000
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: us-east-1
      SERVICE: ${{ matrix.service }}
      CONTAINER: fastmcp
      CONTAINER_PATH: ${{ matrix.container_path }}
      PORT: ${{ matrix.port }}
      SERVER_NAME: ${{ matrix.server_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::423623835312:role/github-action-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Delete old Docker images
        run: |
          output=$(aws lightsail get-container-images \
            --region $AWS_REGION \
            --service-name $SERVICE \
            --no-paginate \
            --output text)
          container_names=($(echo "$output" | awk '{print $NF}'))
          for name in "${container_names[@]:1}"; do
            echo "IMAGE TO DELETE: $name"
            aws lightsail delete-container-image \
              --region $AWS_REGION \
              --service-name $SERVICE \
              --image "$name" || true
          done

      - name: Build Docker image
        run: |
          docker build --platform=linux/amd64 \
            -t $SERVICE \
            -f $CONTAINER_PATH .

      - name: Install Lightsail plugin prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -fsSL "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" \
            | sudo tee /usr/local/bin/lightsailctl >/dev/null
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Ensure Lightsail service exists
        run: |
          aws lightsail create-container-service \
            --region $AWS_REGION \
            --service-name $SERVICE \
            --power micro \
            --scale 1 || true

      - name: Push image to Lightsail
        run: |
          aws lightsail push-container-image \
            --region $AWS_REGION \
            --service-name $SERVICE \
            --label $CONTAINER \
            --image $SERVICE

      - name: Deploy to Lightsail
        run: |
          IMAGE_NAME=":${SERVICE}.${CONTAINER}.latest"
          CONTAINERS_JSON=$(jq -n \
            --arg name "$CONTAINER" \
            --arg image "$IMAGE_NAME" \
            --arg port "$PORT" \
            --arg server "$SERVER_NAME" \
            '{($name): {image: $image, ports: {($port): "HTTP"}, environment: {SERVER_NAME: $server}}}')
          aws lightsail create-container-service-deployment \
            --region $AWS_REGION \
            --service-name $SERVICE \
            --containers "$CONTAINERS_JSON" \
            --public-endpoint "{\"containerName\": \"$CONTAINER\", \"containerPort\": $PORT}"